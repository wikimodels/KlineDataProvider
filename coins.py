import psycopg2
import sys

# –¢–≤–æ–π connection string
CONNECTION_STRING = "postgresql://coin_sifter_db_43u4_user:o2JLzcpHrsZC7lBBOQDpDVLhWQxTL1H7@dpg-d3jodet6ubrc73d0h4dg-a.frankfurt-postgres.render.com/coin_sifter_db_43u4"

# –ò–º—è —Ç–∞–±–ª–∏—Ü—ã, –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –≤ database.py
TABLE_TO_CHECK = "monthly_coin_selection" 


def check_coin_count():
    """
    –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ PostgreSQL –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ.
    """
    conn = None
    try:
        # 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print(f"–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ {CONNECTION_STRING.split('@')[-1]}...")
        conn = psycopg2.connect(CONNECTION_STRING)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ!")
        
        # 2. –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å–æ—Ä
        with conn.cursor() as cursor:
            
            # 3. –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            query = f"SELECT COUNT(*) FROM {TABLE_TO_CHECK};"
            print(f"–í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å: {query}")
            
            cursor.execute(query)
            
            # 4. –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result = cursor.fetchone()
            
            if result:
                count = result[0]
                print("\n" + "="*30)
                print(f"–†–ï–ó–£–õ–¨–¢–ê–¢: –ù–∞–π–¥–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ '{TABLE_TO_CHECK}'.")
                print("="*30 + "\n")
                
                if count == 0:
                    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –æ—à–∏–±–∫–∏ [CRON_JOB] –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")
                else:
                    print("üëç –≠—Ç–æ —Ö–æ—Ä–æ—à–æ. –ü—Ä–æ–±–ª–µ–º–∞ [CRON_JOB] –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ.")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥—Å—á–µ—Ç–∞.")

    except psycopg2.OperationalError as e:
        print(f"üí• –û–®–ò–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", file=sys.stderr)
        print(f"   –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: {e}", file=sys.stderr)
        print("   –ü—Ä–æ–≤–µ—Ä—å IP-–∞–¥—Ä–µ—Å–∞ –≤ 'allow list' –Ω–∞ Render.com –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å connection string.", file=sys.stderr)
        
    except psycopg2.Error as e:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫—É "relation does not exist" (—Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)
        if "relation" in str(e) and "does not exist" in str(e):
            print(f"üí• –û–®–ò–ë–ö–ê –ó–ê–ü–†–û–°–ê: –¢–∞–±–ª–∏—Ü–∞ —Å –∏–º–µ–Ω–µ–º '{TABLE_TO_CHECK}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", file=sys.stderr)
            print("   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TABLE_TO_CHECK –≤ —ç—Ç–æ–º —Å–∫—Ä–∏–ø—Ç–µ.", file=sys.stderr)
        else:
            print(f"üí• –û–ë–©–ê–Ø –û–®–ò–ë–ö–ê psycopg2: {e}", file=sys.stderr)
            
    except Exception as e:
        print(f"üí• –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}", file=sys.stderr)

    finally:
        # 5. –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if conn:
            conn.close()
            print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    check_coin_count()


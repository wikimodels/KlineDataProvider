"""
Этот модуль содержит вспомогательные функции для работы с API бирж.
"""

# --- Карты для преобразования таймфреймов в формат бирж ---
BINANCE_TIMEFRAME_MAP = {
    '1m': '1m', '5m': '5m', '15m': '15m', '30m': '30m',
    '1h': '1h', '4h': '4h', '8h': '8h', '12h': '12h', '1d': '1d'
}

BYBIT_TIMEFRAME_MAP = {
    '1m': '1', '5m': '5', '15m': '15', '30m': '30',
    '1h': '60', '4h': '240', '8h': '480', '12h': '720', '1d': 'D'
}

# --- ДОБАВЛЕНА НЕДОСТАЮЩАЯ ЛОГИКА ---
# Карта для вычисления длительности интервала в миллисекундах
TIMEFRAME_MS_MAP = {
    '1m': 60 * 1000,
    '5m': 5 * 60 * 1000,
    '15m': 15 * 60 * 1000,
    '30m': 30 * 60 * 1000,
    '1h': 60 * 60 * 1000,
    '4h': 4 * 60 * 60 * 1000,
    '8h': 8 * 60 * 60 * 1000,
    '12h': 12 * 60 * 60 * 1000,
    '1d': 24 * 60 * 60 * 1000
}

def get_interval_duration_ms(timeframe: str) -> int:
    """
    Возвращает длительность таймфрейма в миллисекундах.
    Эта функция необходима для расчета closeTime.
    """
    return TIMEFRAME_MS_MAP.get(timeframe, 4 * 60 * 60 * 1000) # 4h по умолчанию

# --- Существующие функции ---

def get_binance_interval(timeframe: str) -> str:
    """Возвращает таймфрейм в формате для Binance API."""
    return BINANCE_TIMEFRAME_MAP.get(timeframe, '4h')

def get_bybit_interval(timeframe: str) -> str:
    """Возвращает таймфрейм в формате для Bybit API."""
    return BYBIT_TIMEFRAME_MAP.get(timeframe, '240')

